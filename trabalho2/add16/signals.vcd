$date
	Sun Aug 25 14:18:31 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_add16 $end
$var wire 16 ! out_sum [15:0] $end
$var wire 1 " out_cout $end
$var reg 16 # in_a [15:0] $end
$var reg 16 $ in_b [15:0] $end
$var reg 1 % in_cin $end
$scope module uut $end
$var wire 16 & a [15:0] $end
$var wire 16 ' b [15:0] $end
$var wire 1 % cin $end
$var wire 16 ( sum [15:0] $end
$var wire 1 " cout $end
$var wire 16 ) carry [15:0] $end
$scope begin full_adder_block[0] $end
$var parameter 2 * i $end
$scope begin genblk1 $end
$scope module fa $end
$var wire 1 + a $end
$var wire 1 , b $end
$var wire 1 - c $end
$var wire 1 . carry $end
$var wire 1 / sum $end
$var wire 1 0 w1 $end
$var wire 1 1 w2 $end
$var wire 1 2 w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin full_adder_block[1] $end
$var parameter 2 3 i $end
$scope begin genblk1 $end
$scope module fa $end
$var wire 1 4 a $end
$var wire 1 5 b $end
$var wire 1 6 c $end
$var wire 1 7 carry $end
$var wire 1 8 sum $end
$var wire 1 9 w1 $end
$var wire 1 : w2 $end
$var wire 1 ; w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin full_adder_block[2] $end
$var parameter 3 < i $end
$scope begin genblk1 $end
$scope module fa $end
$var wire 1 = a $end
$var wire 1 > b $end
$var wire 1 ? c $end
$var wire 1 @ carry $end
$var wire 1 A sum $end
$var wire 1 B w1 $end
$var wire 1 C w2 $end
$var wire 1 D w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin full_adder_block[3] $end
$var parameter 3 E i $end
$scope begin genblk1 $end
$scope module fa $end
$var wire 1 F a $end
$var wire 1 G b $end
$var wire 1 H c $end
$var wire 1 I carry $end
$var wire 1 J sum $end
$var wire 1 K w1 $end
$var wire 1 L w2 $end
$var wire 1 M w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin full_adder_block[4] $end
$var parameter 4 N i $end
$scope begin genblk1 $end
$scope module fa $end
$var wire 1 O a $end
$var wire 1 P b $end
$var wire 1 Q c $end
$var wire 1 R carry $end
$var wire 1 S sum $end
$var wire 1 T w1 $end
$var wire 1 U w2 $end
$var wire 1 V w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin full_adder_block[5] $end
$var parameter 4 W i $end
$scope begin genblk1 $end
$scope module fa $end
$var wire 1 X a $end
$var wire 1 Y b $end
$var wire 1 Z c $end
$var wire 1 [ carry $end
$var wire 1 \ sum $end
$var wire 1 ] w1 $end
$var wire 1 ^ w2 $end
$var wire 1 _ w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin full_adder_block[6] $end
$var parameter 4 ` i $end
$scope begin genblk1 $end
$scope module fa $end
$var wire 1 a a $end
$var wire 1 b b $end
$var wire 1 c c $end
$var wire 1 d carry $end
$var wire 1 e sum $end
$var wire 1 f w1 $end
$var wire 1 g w2 $end
$var wire 1 h w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin full_adder_block[7] $end
$var parameter 4 i i $end
$scope begin genblk1 $end
$scope module fa $end
$var wire 1 j a $end
$var wire 1 k b $end
$var wire 1 l c $end
$var wire 1 m carry $end
$var wire 1 n sum $end
$var wire 1 o w1 $end
$var wire 1 p w2 $end
$var wire 1 q w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin full_adder_block[8] $end
$var parameter 5 r i $end
$scope begin genblk1 $end
$scope module fa $end
$var wire 1 s a $end
$var wire 1 t b $end
$var wire 1 u c $end
$var wire 1 v carry $end
$var wire 1 w sum $end
$var wire 1 x w1 $end
$var wire 1 y w2 $end
$var wire 1 z w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin full_adder_block[9] $end
$var parameter 5 { i $end
$scope begin genblk1 $end
$scope module fa $end
$var wire 1 | a $end
$var wire 1 } b $end
$var wire 1 ~ c $end
$var wire 1 !" carry $end
$var wire 1 "" sum $end
$var wire 1 #" w1 $end
$var wire 1 $" w2 $end
$var wire 1 %" w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin full_adder_block[10] $end
$var parameter 5 &" i $end
$scope begin genblk1 $end
$scope module fa $end
$var wire 1 '" a $end
$var wire 1 (" b $end
$var wire 1 )" c $end
$var wire 1 *" carry $end
$var wire 1 +" sum $end
$var wire 1 ," w1 $end
$var wire 1 -" w2 $end
$var wire 1 ." w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin full_adder_block[11] $end
$var parameter 5 /" i $end
$scope begin genblk1 $end
$scope module fa $end
$var wire 1 0" a $end
$var wire 1 1" b $end
$var wire 1 2" c $end
$var wire 1 3" carry $end
$var wire 1 4" sum $end
$var wire 1 5" w1 $end
$var wire 1 6" w2 $end
$var wire 1 7" w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin full_adder_block[12] $end
$var parameter 5 8" i $end
$scope begin genblk1 $end
$scope module fa $end
$var wire 1 9" a $end
$var wire 1 :" b $end
$var wire 1 ;" c $end
$var wire 1 <" carry $end
$var wire 1 =" sum $end
$var wire 1 >" w1 $end
$var wire 1 ?" w2 $end
$var wire 1 @" w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin full_adder_block[13] $end
$var parameter 5 A" i $end
$scope begin genblk1 $end
$scope module fa $end
$var wire 1 B" a $end
$var wire 1 C" b $end
$var wire 1 D" c $end
$var wire 1 E" carry $end
$var wire 1 F" sum $end
$var wire 1 G" w1 $end
$var wire 1 H" w2 $end
$var wire 1 I" w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin full_adder_block[14] $end
$var parameter 5 J" i $end
$scope begin genblk1 $end
$scope module fa $end
$var wire 1 K" a $end
$var wire 1 L" b $end
$var wire 1 M" c $end
$var wire 1 N" carry $end
$var wire 1 O" sum $end
$var wire 1 P" w1 $end
$var wire 1 Q" w2 $end
$var wire 1 R" w3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin full_adder_block[15] $end
$var parameter 5 S" i $end
$scope begin genblk1 $end
$scope module fa $end
$var wire 1 T" a $end
$var wire 1 U" b $end
$var wire 1 V" c $end
$var wire 1 " carry $end
$var wire 1 W" sum $end
$var wire 1 X" w1 $end
$var wire 1 Y" w2 $end
$var wire 1 Z" w3 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1111 S"
b1110 J"
b1101 A"
b1100 8"
b1011 /"
b1010 &"
b1001 {
b1000 r
b111 i
b110 `
b101 W
b100 N
b11 E
b10 <
b1 3
b0 *
$end
#0
$dumpvars
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0R"
0Q"
0P"
0O"
0N"
0M"
0L"
0K"
0I"
0H"
0G"
0F"
0E"
0D"
0C"
0B"
0@"
0?"
0>"
0="
0<"
0;"
0:"
09"
07"
06"
05"
04"
03"
02"
01"
00"
0."
0-"
0,"
0+"
0*"
0)"
0("
0'"
0%"
0$"
1#"
1""
0!"
0~
0}
1|
0z
0y
0x
0w
0v
0u
0t
0s
0q
0p
0o
0n
0m
0l
0k
0j
0h
0g
0f
0e
0d
0c
0b
0a
0_
0^
0]
0\
0[
0Z
0Y
0X
0V
0U
0T
0S
0R
0Q
0P
0O
0M
0L
0K
0J
0I
0H
0G
0F
0D
0C
0B
1A
0@
1?
0>
0=
0;
1:
09
08
17
06
15
14
02
01
10
1/
0.
0-
1,
0+
b100 )
b1000000101 (
b11 '
b1000000010 &
0%
b11 $
b1000000010 #
0"
b1000000101 !
$end
#10
0w
0u
0m
0q
0l
0d
0h
0c
0[
0_
0Z
0R
0V
0Q
0I
0M
0H
0@
0?
1A
0D
1J
1S
1\
1e
1n
18
b0 )
07
b11111111 !
b11111111 (
0""
1B
1K
1T
1]
1f
1o
19
0:
0#"
1>
1G
1P
1Y
1b
1k
04
0|
b11111111 $
b11111111 '
b0 #
b0 &
#20
1"
1Z"
1V"
1N"
1F"
1R"
1D"
1M"
0/
08
0A
0J
0e
0W"
1w
1""
1+"
1<"
b1110000000000000 )
1E"
b10011110110000 !
b10011110110000 (
0O"
00
09
0B
0K
0f
1X"
1x
1#"
1,"
1?"
1H"
1P"
0,
05
0>
0G
0b
1:"
1C"
1U"
1s
1|
1'"
19"
1B"
1K"
b1011000010110000 $
b1011000010110000 '
b111011100000000 #
b111011100000000 &
#30
14"
18
1A
1J
1e
1="
1~
1)"
12"
16
1?
1H
1Q
1Z
1c
1l
1u
1;"
1w
1v
1""
1!"
1+"
1*"
1O"
0R"
1.
17
1@
1I
1S
1R
1\
1[
1d
1n
1m
b1111111111111110 )
13"
b1111111111111110 !
b1111111111111110 (
1W"
0Z"
0x
1y
0#"
1$"
0,"
1-"
0P"
1Q"
11
1:
1C
1L
0T
1U
0]
1^
1g
0o
1p
16"
0X"
1Y"
1,
15
1>
1G
1b
1t
1}
1("
11"
1L"
1+
14
1=
1F
1O
1X
1a
1j
10"
1T"
b1111111111111111 $
b1111111111111111 '
b1111111111111111 #
b1111111111111111 &
#50
